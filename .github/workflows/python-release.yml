name: Python Package

on:
  release:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-wheels:
    name: Build wheels for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-13
          - macos-14

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.16.5

      #- name: Configure Environment for Windows
      #  if: runner.os == 'Windows'
      #  run: |
      #    echo "CC=gcc" >> $GITHUB_ENV
      #    echo "CXX=g++" >> $GITHUB_ENV
      #    echo "DISTUTILS_USE_SDK=1" >> $GITHUB_ENV
      #  shell: bash

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse bindings/python
        env:
          CIBW_ARCHS_LINUX: x86_64 i686 aarch64
          # musllinux uses apk & manylinux uses yum
          CIBW_BEFORE_BUILD_LINUX: |
            if command -v apk > /dev/null; then
              apk add --update clang && make -C src c_kzg_4844.o
            elif command -v yum > /dev/null; then
              yum install -y clang && make -C src c_kzg_4844.o
            fi
          CIBW_BEFORE_BUILD_WINDOWS: |
            cd blst && cmd //c build.bat -D__BLST_PORTABLE__ && cp blst.lib ../lib && cp *.h ../inc
          CIBW_BEFORE_BUILD_MACOS: |
            make -C src c_kzg_4844.o


